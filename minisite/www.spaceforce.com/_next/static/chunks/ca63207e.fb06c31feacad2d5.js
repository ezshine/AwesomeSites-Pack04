"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[961],{69019:function(e,t,n){n.d(t,{$L:function(){return ye},Cw:function(){return ue},DD:function(){return $},H5:function(){return oe},KM:function(){return ne},ki:function(){return ce},tq:function(){return xe},w2:function(){return te}});var i=n(96995),r="varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}";function s(e,t){let n="texel";if(null!==e){const r=Number.parseInt(i.UZH);if(!(t&&r>=133&&135!==r&&e.format===i.wk1&&e.type===i.ywz&&e.encoding===i.knz))switch(e.encoding){case i.knz:n="sRGBToLinear(texel)";break;case i.rnI:n="texel";break;default:throw new Error(`Unsupported encoding: ${e.encoding}`)}}return n}var a=0,o=1,c=2,u=3,l=4,h=5,f=6,d=7,v=8,p=9,m=10,x=11,y=12,g=13,S=14,A=15,w=16,E=17,b=18,T=19,M=20,U=21,z=22,_=23,R=24,F=25,I=26,B=27,P=28,H=29,C=30,G=31,N=32,D=0,k=1,O=2,L=3,V=0,W=1,X=2,Z={FRAGMENT_HEAD:"FRAGMENT_HEAD",FRAGMENT_MAIN_UV:"FRAGMENT_MAIN_UV",FRAGMENT_MAIN_IMAGE:"FRAGMENT_MAIN_IMAGE",VERTEX_HEAD:"VERTEX_HEAD",VERTEX_MAIN_SUPPORT:"VERTEX_MAIN_SUPPORT"},$={VERY_SMALL:0,SMALL:1,MEDIUM:2,LARGE:3,VERY_LARGE:4,HUGE:5},K=[new Float32Array([0,0]),new Float32Array([0,1,1]),new Float32Array([0,1,1,2]),new Float32Array([0,1,2,2,3]),new Float32Array([0,1,2,3,4,4,5]),new Float32Array([0,1,2,3,4,5,7,8,9,10])],j=class extends i.jyz{constructor(e=new i.Ltg){super({name:"KawaseBlurMaterial",uniforms:{inputBuffer:new i.xWb(null),texelSize:new i.xWb(new i.Ltg),scale:new i.xWb(1),kernel:new i.xWb(0)},blending:i.jFi,depthWrite:!1,depthTest:!1,fragmentShader:"#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\nvarying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec4 sum=texture2D(inputBuffer,vUv0);sum+=texture2D(inputBuffer,vUv1);sum+=texture2D(inputBuffer,vUv2);sum+=texture2D(inputBuffer,vUv3);gl_FragColor=sum*0.25;\n#include <encodings_fragment>\n}",vertexShader:"uniform vec4 texelSize;uniform float kernel;uniform float scale;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vec2 dUv=(texelSize.xy*vec2(kernel)+texelSize.zw)*scale;vUv0=vec2(uv.x-dUv.x,uv.y+dUv.y);vUv1=vec2(uv.x+dUv.x,uv.y+dUv.y);vUv2=vec2(uv.x+dUv.x,uv.y-dUv.y);vUv3=vec2(uv.x-dUv.x,uv.y-dUv.y);gl_Position=vec4(position.xy,1.0,1.0);}"}),this.toneMapped=!1,this.setTexelSize(e.x,e.y),this.kernelSize=$.MEDIUM}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.inputBuffer=e}get kernelSequence(){return K[this.kernelSize]}get scale(){return this.uniforms.scale.value}set scale(e){this.uniforms.scale.value=e}getScale(){return this.uniforms.scale.value}setScale(e){this.uniforms.scale.value=e}getKernel(){return null}get kernel(){return this.uniforms.kernel.value}set kernel(e){this.uniforms.kernel.value=e}setKernel(e){this.kernel=e}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t,.5*e,.5*t)}setSize(e,t){const n=1/e,i=1/t;this.uniforms.texelSize.value.set(n,i,.5*n,.5*i)}},Q=class extends i.jyz{constructor(){super({name:"CopyMaterial",uniforms:{inputBuffer:new i.xWb(null),opacity:new i.xWb(1)},blending:i.jFi,depthWrite:!1,depthTest:!1,fragmentShader:"#include <common>\n#include <dithering_pars_fragment>\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\nuniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;\n#include <encodings_fragment>\n#include <dithering_fragment>\n}",vertexShader:r}),this.toneMapped=!1}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}getOpacity(e){return this.uniforms.opacity.value}setOpacity(e){this.uniforms.opacity.value=e}},Y=class extends i.jyz{constructor(e,t,n,r,s=!1){super({name:"EffectMaterial",defines:{THREE_REVISION:i.UZH.replace(/\D+/g,""),DEPTH_PACKING:"0",ENCODE_OUTPUT:"1"},uniforms:{inputBuffer:new i.xWb(null),depthBuffer:new i.xWb(null),resolution:new i.xWb(new i.FM8),texelSize:new i.xWb(new i.FM8),cameraNear:new i.xWb(.3),cameraFar:new i.xWb(1e3),aspect:new i.xWb(1),time:new i.xWb(0)},blending:i.jFi,depthWrite:!1,depthTest:!1,dithering:s}),this.toneMapped=!1,e&&this.setShaderParts(e),t&&this.setDefines(t),n&&this.setUniforms(n),this.copyCameraSettings(r)}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(e){this.uniforms.depthBuffer.value=e}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setDepthBuffer(e,t=i.z81){this.depthBuffer=e,this.depthPacking=t}setShaderData(e){this.setShaderParts(e.shaderParts),this.setDefines(e.defines),this.setUniforms(e.uniforms),this.setExtensions(e.extensions)}setShaderParts(e){var t,n,i,r,s;return this.fragmentShader="#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#define packFloatToRGBA(v) packDepthToRGBA(v)\n#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\n#if DEPTH_PACKING == 3201\nuniform lowp sampler2D depthBuffer;\n#elif defined(GL_FRAGMENT_PRECISION_HIGH)\nuniform highp sampler2D depthBuffer;\n#else\nuniform mediump sampler2D depthBuffer;\n#endif\nuniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;\n#if THREE_REVISION < 143\n#define luminance(v) linearToRelativeLuminance(v)\n#endif\n#if THREE_REVISION >= 137\nvec4 sRGBToLinear(const in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}\n#endif\nfloat readDepth(const in vec2 uv){\n#if DEPTH_PACKING == 3201\nreturn unpackRGBAToDepth(texture2D(depthBuffer,uv));\n#else\nreturn texture2D(depthBuffer,uv).r;\n#endif\n}float getViewZ(const in float depth){\n#ifdef PERSPECTIVE_CAMERA\nreturn perspectiveDepthToViewZ(depth,cameraNear,cameraFar);\n#else\nreturn orthographicDepthToViewZ(depth,cameraNear,cameraFar);\n#endif\n}vec3 RGBToHCV(const in vec3 RGB){vec4 P=mix(vec4(RGB.bg,-1.0,2.0/3.0),vec4(RGB.gb,0.0,-1.0/3.0),step(RGB.b,RGB.g));vec4 Q=mix(vec4(P.xyw,RGB.r),vec4(RGB.r,P.yzx),step(P.x,RGB.r));float C=Q.x-min(Q.w,Q.y);float H=abs((Q.w-Q.y)/(6.0*C+EPSILON)+Q.z);return vec3(H,C,Q.x);}vec3 RGBToHSL(const in vec3 RGB){vec3 HCV=RGBToHCV(RGB);float L=HCV.z-HCV.y*0.5;float S=HCV.y/(1.0-abs(L*2.0-1.0)+EPSILON);return vec3(HCV.x,S,L);}vec3 HueToRGB(const in float H){float R=abs(H*6.0-3.0)-1.0;float G=2.0-abs(H*6.0-2.0);float B=2.0-abs(H*6.0-4.0);return clamp(vec3(R,G,B),0.0,1.0);}vec3 HSLToRGB(const in vec3 HSL){vec3 RGB=HueToRGB(HSL.x);float C=(1.0-abs(2.0*HSL.z-1.0))*HSL.y;return(RGB-0.5)*C+HSL.z;}FRAGMENT_HEADvoid main(){FRAGMENT_MAIN_UVvec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGEgl_FragColor=color0;\n#ifdef ENCODE_OUTPUT\n#include <encodings_fragment>\n#endif\n#include <dithering_fragment>\n}".replace(Z.FRAGMENT_HEAD,null!=(t=e.get(Z.FRAGMENT_HEAD))?t:"").replace(Z.FRAGMENT_MAIN_UV,null!=(n=e.get(Z.FRAGMENT_MAIN_UV))?n:"").replace(Z.FRAGMENT_MAIN_IMAGE,null!=(i=e.get(Z.FRAGMENT_MAIN_IMAGE))?i:""),this.vertexShader="uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEADvoid main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORTgl_Position=vec4(position.xy,1.0,1.0);}".replace(Z.VERTEX_HEAD,null!=(r=e.get(Z.VERTEX_HEAD))?r:"").replace(Z.VERTEX_MAIN_SUPPORT,null!=(s=e.get(Z.VERTEX_MAIN_SUPPORT))?s:""),this.needsUpdate=!0,this}setDefines(e){for(const t of e.entries())this.defines[t[0]]=t[1];return this.needsUpdate=!0,this}setUniforms(e){for(const t of e.entries())this.uniforms[t[0]]=t[1];return this}setExtensions(e){this.extensions={};for(const t of e)this.extensions[t]=!0;return this}get encodeOutput(){return void 0!==this.defines.ENCODE_OUTPUT}set encodeOutput(e){this.encodeOutput!==e&&(e?this.defines.ENCODE_OUTPUT="1":delete this.defines.ENCODE_OUTPUT,this.needsUpdate=!0)}isOutputEncodingEnabled(e){return this.encodeOutput}setOutputEncodingEnabled(e){this.encodeOutput=e}get time(){return this.uniforms.time.value}set time(e){this.uniforms.time.value=e}setDeltaTime(e){this.uniforms.time.value+=e}adoptCameraSettings(e){this.copyCameraSettings(e)}copyCameraSettings(e){e&&(this.uniforms.cameraNear.value=e.near,this.uniforms.cameraFar.value=e.far,e instanceof i.cPb?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(e,t){const n=this.uniforms;n.resolution.value.set(e,t),n.texelSize.value.set(1/e,1/t),n.aspect.value=e/t}static get Section(){return Z}},q=class extends j{constructor({kernelSize:e=$.MEDIUM,offset:t=0,rotation:n=0,focusArea:r=.4,feather:s=.3}={}){super(),this.fragmentShader="#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\nuniform vec4 maskParams;varying vec2 vUv;varying vec2 vUv2;varying vec2 vOffset;float linearGradientMask(const in float x){return smoothstep(maskParams.x,maskParams.y,x)-smoothstep(maskParams.w,maskParams.z,x);}void main(){vec2 dUv=vOffset*(1.0-linearGradientMask(vUv2.y));vec4 sum=texture2D(inputBuffer,vec2(vUv.x-dUv.x,vUv.y+dUv.y));sum+=texture2D(inputBuffer,vec2(vUv.x+dUv.x,vUv.y+dUv.y));sum+=texture2D(inputBuffer,vec2(vUv.x+dUv.x,vUv.y-dUv.y));sum+=texture2D(inputBuffer,vec2(vUv.x-dUv.x,vUv.y-dUv.y));gl_FragColor=sum*0.25;\n#include <encodings_fragment>\n}",this.vertexShader="uniform vec4 texelSize;uniform float kernel;uniform float scale;uniform float aspect;uniform vec2 rotation;varying vec2 vUv;varying vec2 vUv2;varying vec2 vOffset;void main(){vec2 uv=position.xy*0.5+0.5;vUv=uv;vUv2=(uv-0.5)*2.0*vec2(aspect,1.0);vUv2=vec2(dot(rotation,vUv2),dot(rotation,vec2(vUv2.y,-vUv2.x)));vOffset=(texelSize.xy*vec2(kernel)+texelSize.zw)*scale;gl_Position=vec4(position.xy,1.0,1.0);}",this.kernelSize=e,this.uniforms.aspect=new i.xWb(1),this.uniforms.rotation=new i.xWb(new i.FM8),this.uniforms.maskParams=new i.xWb(new i.Ltg),this._offset=t,this._focusArea=r,this._feather=s,this.rotation=n,this.updateParams()}updateParams(){const e=this.uniforms.maskParams.value,t=Math.max(this.focusArea,0),n=Math.max(t-this.feather,0);e.set(this.offset-t,this.offset-n,this.offset+t,this.offset+n)}get rotation(){return Math.acos(this.uniforms.rotation.value.x)}set rotation(e){this.uniforms.rotation.value.set(Math.cos(e),Math.sin(e))}get offset(){return this._offset}set offset(e){this._offset=e,this.updateParams()}get focusArea(){return this._focusArea}set focusArea(e){this._focusArea=e,this.updateParams()}get feather(){return this._feather}set feather(e){this._feather=e,this.updateParams()}setSize(e,t){super.setSize(e,t),this.uniforms.aspect.value=e/t}},J=new i.V1s,ee=null;var te=class{constructor(e="Pass",t=new i.xsS,n=J){this.name=e,this.renderer=null,this.scene=t,this.camera=n,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(e){if(this.rtt===e){const t=this.fullscreenMaterial;null!==t&&(t.needsUpdate=!0),this.rtt=!e}}set mainScene(e){}set mainCamera(e){}setRenderer(e){this.renderer=e}isEnabled(){return this.enabled}setEnabled(e){this.enabled=e}get fullscreenMaterial(){return null!==this.screen?this.screen.material:null}set fullscreenMaterial(e){let t=this.screen;null!==t?t.material=e:(t=new i.Kj0(function(){if(null===ee){const e=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),t=new Float32Array([0,0,2,0,0,2]);void 0!==(ee=new i.u9r).setAttribute?(ee.setAttribute("position",new i.TlE(e,3)),ee.setAttribute("uv",new i.TlE(t,2))):(ee.addAttribute("position",new i.TlE(e,3)),ee.addAttribute("uv",new i.TlE(t,2)))}return ee}(),e),t.frustumCulled=!1,null===this.scene&&(this.scene=new i.xsS),this.scene.add(t),this.screen=t)}getFullscreenMaterial(){return this.fullscreenMaterial}setFullscreenMaterial(e){this.fullscreenMaterial=e}getDepthTexture(){return null}setDepthTexture(e,t=i.z81){}render(e,t,n,i,r){throw new Error("Render method not implemented!")}setSize(e,t){}initialize(e,t,n){}dispose(){for(const e of Object.keys(this)){const t=this[e];(t instanceof i.dd2||t instanceof i.F5T||t instanceof i.xEZ||t instanceof te)&&this[e].dispose()}}},ne=class extends te{constructor(e,t=!0){super("CopyPass"),this.fullscreenMaterial=new Q,this.needsSwap=!1,this.renderTarget=e,void 0===e&&(this.renderTarget=new i.dd2(1,1,{minFilter:i.wem,magFilter:i.wem,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="CopyPass.Target"),this.autoResize=t}get resize(){return this.autoResize}set resize(e){this.autoResize=e}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}setAutoResizeEnabled(e){this.autoResize=e}render(e,t,n,i,r){this.fullscreenMaterial.inputBuffer=t.texture,e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){this.autoResize&&this.renderTarget.setSize(e,t)}initialize(e,t,n){void 0!==n&&(this.renderTarget.texture.type=n,n!==i.ywz?this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1":e.outputEncoding===i.knz&&(this.renderTarget.texture.encoding=i.knz))}},ie=(new i.Ilk,-1),re=class extends i.pBf{constructor(e,t=-1,n=-1,r=1){super(),this.resizable=e,this.baseSize=new i.FM8(1,1),this.preferredSize=new i.FM8(t,n),this.target=this.preferredSize,this.s=r,this.effectiveSize=new i.FM8,this.addEventListener("change",(()=>this.updateEffectiveSize())),this.updateEffectiveSize()}updateEffectiveSize(){const e=this.baseSize,t=this.preferredSize,n=this.effectiveSize,i=this.scale;t.width!==ie?n.width=t.width:t.height!==ie?n.width=Math.round(t.height*(e.width/Math.max(e.height,1))):n.width=Math.round(e.width*i),t.height!==ie?n.height=t.height:t.width!==ie?n.height=Math.round(t.width/Math.max(e.width/Math.max(e.height,1),1)):n.height=Math.round(e.height*i)}get width(){return this.effectiveSize.width}set width(e){this.preferredWidth=e}get height(){return this.effectiveSize.height}set height(e){this.preferredHeight=e}getWidth(){return this.width}getHeight(){return this.height}get scale(){return this.s}set scale(e){this.s!==e&&(this.s=e,this.preferredSize.setScalar(ie),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getScale(){return this.scale}setScale(e){this.scale=e}get baseWidth(){return this.baseSize.width}set baseWidth(e){this.baseSize.width!==e&&(this.baseSize.width=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseWidth(){return this.baseWidth}setBaseWidth(e){this.baseWidth=e}get baseHeight(){return this.baseSize.height}set baseHeight(e){this.baseSize.height!==e&&(this.baseSize.height=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseHeight(){return this.baseHeight}setBaseHeight(e){this.baseHeight=e}setBaseSize(e,t){this.baseSize.width===e&&this.baseSize.height===t||(this.baseSize.set(e,t),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}get preferredWidth(){return this.preferredSize.width}set preferredWidth(e){this.preferredSize.width!==e&&(this.preferredSize.width=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredWidth(){return this.preferredWidth}setPreferredWidth(e){this.preferredWidth=e}get preferredHeight(){return this.preferredSize.height}set preferredHeight(e){this.preferredSize.height!==e&&(this.preferredSize.height=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredHeight(){return this.preferredHeight}setPreferredHeight(e){this.preferredHeight=e}setPreferredSize(e,t){this.preferredSize.width===e&&this.preferredSize.height===t||(this.preferredSize.set(e,t),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}copy(e){this.s=e.scale,this.baseSize.set(e.baseWidth,e.baseHeight),this.preferredSize.set(e.preferredWidth,e.preferredHeight),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height)}static get AUTO_SIZE(){return ie}};new Float32Array([255/256/256**3,255/256/65536,255/256/256,255/256]);function se(e,t,n){for(const i of t){const t="$1"+e+i.charAt(0).toUpperCase()+i.slice(1),r=new RegExp("([^\\.])(\\b"+i+"\\b)","g");for(const e of n.entries())null!==e[1]&&n.set(e[0],e[1].replace(r,t))}}function ae(e,t,n){var r,s,a,o,c;let u=t.getFragmentShader(),l=t.getVertexShader();const h=void 0!==u&&/mainImage/.test(u),f=void 0!==u&&/mainUv/.test(u);if(n.attributes|=t.getAttributes(),void 0===u)throw new Error(`Missing fragment shader (${t.name})`);if(f&&0!==(n.attributes&X))throw new Error(`Effects that transform UVs are incompatible with convolution effects (${t.name})`);if(!h&&!f)throw new Error(`Could not find mainImage or mainUv function (${t.name})`);{const d=/\w+\s+(\w+)\([\w\s,]*\)\s*{/g,v=n.shaderParts;let p=null!=(r=v.get(Z.FRAGMENT_HEAD))?r:"",m=null!=(s=v.get(Z.FRAGMENT_MAIN_UV))?s:"",x=null!=(a=v.get(Z.FRAGMENT_MAIN_IMAGE))?a:"",y=null!=(o=v.get(Z.VERTEX_HEAD))?o:"",g=null!=(c=v.get(Z.VERTEX_MAIN_SUPPORT))?c:"";const S=new Set,A=new Set;if(f&&(m+=`\t${e}MainUv(UV);\n`,n.uvTransformation=!0),null!==l&&/mainSupport/.test(l)){const t=/mainSupport *\([\w\s]*?uv\s*?\)/.test(l);g+=`\t${e}MainSupport(`,g+=t?"vUv);\n":");\n";for(const e of l.matchAll(/(?:varying\s+\w+\s+([\S\s]*?);)/g))for(const t of e[1].split(/\s*,\s*/))n.varyings.add(t),S.add(t),A.add(t);for(const e of l.matchAll(d))A.add(e[1])}for(const e of u.matchAll(d))A.add(e[1]);for(const e of t.defines.keys())A.add(e.replace(/\([\w\s,]*\)/g,""));for(const e of t.uniforms.keys())A.add(e);A.delete("while"),A.delete("for"),A.delete("if"),t.uniforms.forEach(((t,i)=>n.uniforms.set(e+i.charAt(0).toUpperCase()+i.slice(1),t))),t.defines.forEach(((t,i)=>n.defines.set(e+i.charAt(0).toUpperCase()+i.slice(1),t)));const w=new Map([["fragment",u],["vertex",l]]);se(e,A,n.defines),se(e,A,w),u=w.get("fragment"),l=w.get("vertex");const E=t.blendMode;if(n.blendModes.set(E.blendFunction,E),h){null!==t.inputColorSpace&&t.inputColorSpace!==n.colorSpace&&(x+=t.inputColorSpace===i.knz?"color0 = LinearTosRGB(color0);\n\t":"color0 = sRGBToLinear(color0);\n\t"),null!==t.outputColorSpace?n.colorSpace=t.outputColorSpace:null!==t.inputColorSpace&&(n.colorSpace=t.inputColorSpace);const r=/MainImage *\([\w\s,]*?depth[\w\s,]*?\)/;x+=`${e}MainImage(color0, UV, `,0!==(n.attributes&W)&&r.test(u)&&(x+="depth, ",n.readDepth=!0),x+="color1);\n\t";const s=e+"BlendOpacity";n.uniforms.set(s,E.opacity),x+=`color0 = blend${E.blendFunction}(color0, color1, ${s});\n\n\t`,p+=`uniform float ${s};\n\n`}if(p+=u+"\n",null!==l&&(y+=l+"\n"),v.set(Z.FRAGMENT_HEAD,p),v.set(Z.FRAGMENT_MAIN_UV,m),v.set(Z.FRAGMENT_MAIN_IMAGE,x),v.set(Z.VERTEX_HEAD,y),v.set(Z.VERTEX_MAIN_SUPPORT,g),null!==t.extensions)for(const e of t.extensions)n.extensions.add(e)}}var oe=class extends te{constructor(e,...t){super("EffectPass"),this.fullscreenMaterial=new Y(null,null,null,e),this.listener=e=>this.handleEvent(e),this.effects=[],this.setEffects(t),this.skipRendering=!1,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY,this.timeScale=1}set mainScene(e){for(const t of this.effects)t.mainScene=e}set mainCamera(e){this.fullscreenMaterial.copyCameraSettings(e);for(const t of this.effects)t.mainCamera=e}get encodeOutput(){return this.fullscreenMaterial.encodeOutput}set encodeOutput(e){this.fullscreenMaterial.encodeOutput=e}get dithering(){return this.fullscreenMaterial.dithering}set dithering(e){const t=this.fullscreenMaterial;t.dithering=e,t.needsUpdate=!0}setEffects(e){for(const t of this.effects)t.removeEventListener("change",this.listener);this.effects=e.sort(((e,t)=>t.attributes-e.attributes));for(const t of this.effects)t.addEventListener("change",this.listener)}updateMaterial(){const e=new he;let t=0;for(const i of this.effects)if(i.blendMode.blendFunction===p)e.attributes|=i.getAttributes()&W;else{if(0!==(e.attributes&i.getAttributes()&X))throw new Error(`Convolution effects cannot be merged (${i.name})`);ae("e"+t++,i,e)}let n=e.shaderParts.get(Z.FRAGMENT_HEAD),r=e.shaderParts.get(Z.FRAGMENT_MAIN_IMAGE),s=e.shaderParts.get(Z.FRAGMENT_MAIN_UV);const a=/\bblend\b/g;for(const i of e.blendModes.values())n+=i.getShaderCode().replace(a,`blend${i.blendFunction}`)+"\n";0!==(e.attributes&W)?(e.readDepth&&(r="float depth = readDepth(UV);\n\n\t"+r),this.needsDepthTexture=null===this.getDepthTexture()):this.needsDepthTexture=!1,e.colorSpace===i.knz&&(r+="color0 = sRGBToLinear(color0);\n\t"),e.uvTransformation?(s="vec2 transformedUv = vUv;\n"+s,e.defines.set("UV","transformedUv")):e.defines.set("UV","vUv"),e.shaderParts.set(Z.FRAGMENT_HEAD,n),e.shaderParts.set(Z.FRAGMENT_MAIN_IMAGE,r),e.shaderParts.set(Z.FRAGMENT_MAIN_UV,s),e.shaderParts.forEach(((e,t,n)=>n.set(t,null==e?void 0:e.trim().replace(/^#/,"\n#")))),this.skipRendering=0===t,this.needsSwap=!this.skipRendering,this.fullscreenMaterial.setShaderData(e)}recompile(){this.updateMaterial()}getDepthTexture(){return this.fullscreenMaterial.depthBuffer}setDepthTexture(e,t=i.z81){this.fullscreenMaterial.depthBuffer=e,this.fullscreenMaterial.depthPacking=t;for(const n of this.effects)n.setDepthTexture(e,t)}render(e,t,n,i,r){for(const s of this.effects)s.update(e,t,i);if(!this.skipRendering||this.renderToScreen){const r=this.fullscreenMaterial;r.inputBuffer=t.texture,r.time+=i*this.timeScale,e.setRenderTarget(this.renderToScreen?null:n),e.render(this.scene,this.camera)}}setSize(e,t){this.fullscreenMaterial.setSize(e,t);for(const n of this.effects)n.setSize(e,t)}initialize(e,t,n){this.renderer=e;for(const i of this.effects)i.initialize(e,t,n);this.updateMaterial(),void 0!==n&&n!==i.ywz&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}dispose(){super.dispose();for(const e of this.effects)e.removeEventListener("change",this.listener),e.dispose()}handleEvent(e){if("change"===e.type)this.recompile()}},ce=class extends te{constructor({kernelSize:e=$.MEDIUM,resolutionScale:t=.5,width:n=re.AUTO_SIZE,height:r=re.AUTO_SIZE,resolutionX:s=n,resolutionY:a=r}={}){super("KawaseBlurPass"),this.renderTargetA=new i.dd2(1,1,{depthBuffer:!1}),this.renderTargetA.texture.name="Blur.Target.A",this.renderTargetB=this.renderTargetA.clone(),this.renderTargetB.texture.name="Blur.Target.B";const o=this.resolution=new re(this,s,a,t);o.addEventListener("change",(e=>this.setSize(o.baseWidth,o.baseHeight))),this._blurMaterial=new j,this._blurMaterial.kernelSize=e,this.copyMaterial=new Q}getResolution(){return this.resolution}get blurMaterial(){return this._blurMaterial}set blurMaterial(e){this._blurMaterial=e}get dithering(){return this.copyMaterial.dithering}set dithering(e){this.copyMaterial.dithering=e}get kernelSize(){return this.blurMaterial.kernelSize}set kernelSize(e){this.blurMaterial.kernelSize=e}get width(){return this.resolution.width}set width(e){this.resolution.preferredWidth=e}get height(){return this.resolution.height}set height(e){this.resolution.preferredHeight=e}get scale(){return this.blurMaterial.scale}set scale(e){this.blurMaterial.scale=e}getScale(){return this.blurMaterial.scale}setScale(e){this.blurMaterial.scale=e}getKernelSize(){return this.kernelSize}setKernelSize(e){this.kernelSize=e}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}render(e,t,n,i,r){const s=this.scene,a=this.camera,o=this.renderTargetA,c=this.renderTargetB,u=this.blurMaterial,l=u.kernelSequence;let h=t;this.fullscreenMaterial=u;for(let f=0,d=l.length;f<d;++f){const t=0===(1&f)?o:c;u.kernel=l[f],u.inputBuffer=h.texture,e.setRenderTarget(t),e.render(s,a),h=t}this.fullscreenMaterial=this.copyMaterial,this.copyMaterial.inputBuffer=h.texture,e.setRenderTarget(this.renderToScreen?null:n),e.render(s,a)}setSize(e,t){const n=this.resolution;n.setBaseSize(e,t);const i=n.width,r=n.height;this.renderTargetA.setSize(i,r),this.renderTargetB.setSize(i,r),this.blurMaterial.setSize(e,t)}initialize(e,t,n){void 0!==n&&(this.renderTargetA.texture.type=n,this.renderTargetB.texture.type=n,n!==i.ywz?(this.blurMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.copyMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1"):e.outputEncoding===i.knz&&(this.renderTargetA.texture.encoding=i.knz,this.renderTargetB.texture.encoding=i.knz))}static get AUTO_SIZE(){return re.AUTO_SIZE}},ue=class extends te{constructor(e,t="inputBuffer"){super("ShaderPass"),this.fullscreenMaterial=e,this.input=t}setInput(e){this.input=e}render(e,t,n,i,r){const s=this.fullscreenMaterial.uniforms;null!==t&&void 0!==s&&void 0!==s[this.input]&&(s[this.input].value=t.texture),e.setRenderTarget(this.renderToScreen?null:n),e.render(this.scene,this.camera)}initialize(e,t,n){void 0!==n&&n!==i.ywz&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},le=class extends ce{constructor({offset:e=0,rotation:t=0,focusArea:n=.4,feather:i=.3,kernelSize:r=$.MEDIUM,resolutionScale:s=.5,resolutionX:a=re.AUTO_SIZE,resolutionY:o=re.AUTO_SIZE}={}){super({kernelSize:r,resolutionScale:s,resolutionX:a,resolutionY:o}),this.blurMaterial=new q({kernelSize:r,offset:e,rotation:t,focusArea:n,feather:i})}},he=class{constructor(){this.shaderParts=new Map([[Z.FRAGMENT_HEAD,null],[Z.FRAGMENT_MAIN_UV,null],[Z.FRAGMENT_MAIN_IMAGE,null],[Z.VERTEX_HEAD,null],[Z.VERTEX_MAIN_SUPPORT,null]]),this.defines=new Map,this.uniforms=new Map,this.blendModes=new Map,this.extensions=new Set,this.attributes=V,this.varyings=new Set,this.uvTransformation=!1,this.readDepth=!1,this.colorSpace=i.rnI}};Set;var fe=new Map([[a,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y,opacity);}"],[o,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,min(y.a,opacity));}"],[c,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y)*0.5,opacity);}"],[u,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.rg,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[l,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(step(0.0,y)*(1.0-min(vec4(1.0),(1.0-x)/y)),vec4(1.0),step(1.0,x));return mix(x,z,opacity);}"],[h,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=step(0.0,x)*mix(min(vec4(1.0),x/max(1.0-y,1e-9)),vec4(1.0),step(1.0,y));return mix(x,z,opacity);}"],[f,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x,y),opacity);}"],[d,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,abs(x-y),opacity);}"],[v,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x/max(y,1e-12),opacity);}"],[p,null],[m,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y-2.0*x*y),opacity);}"],[x,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 a=min(x,1.0),b=min(y,1.0);vec4 z=mix(2.0*a*b,1.0-2.0*(1.0-a)*(1.0-b),step(0.5,y));return mix(x,z,opacity);}"],[y,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,step(1.0,x+y),opacity);}"],[g,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.r,xHSL.gb));return vec4(mix(x.rgb,z,opacity),y.a);}"],[S,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-y,opacity);}"],[A,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y*(1.0-x),opacity);}"],[w,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x,y),opacity);}"],[E,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(y+x-1.0,0.0,1.0),opacity);}"],[b,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x+y,1.0),opacity);}"],[T,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(2.0*y+x-1.0,0.0,1.0),opacity);}"],[M,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.rg,yHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[U,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x*y,opacity);}"],[z,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-abs(1.0-x-y),opacity);}"],[_,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,opacity);}"],[R,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(2.0*y*x,1.0-2.0*(1.0-y)*(1.0-x),step(0.5,x));return mix(x,z,opacity);}"],[F,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 z=mix(mix(y2,x,step(0.5*x,y)),max(vec4(0.0),y2-1.0),step(x,(y2-1.0)));return mix(x,z,opacity);}"],[I,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(min(x*x/max(1.0-y,1e-12),1.0),y,step(1.0,y));return mix(x,z,opacity);}"],[B,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.r,yHSL.g,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[P,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y-min(x*y,1.0),opacity);}"],[H,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 w=step(0.5,y);vec4 z=mix(x-(1.0-y2)*x*(1.0-x),mix(x+(y2-1.0)*(sqrt(x)-x),x+(y2-1.0)*x*((16.0*x-12.0)*x+3.0),w*(1.0-step(0.25,x))),w);return mix(x,z,opacity);}"],[C,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y;}"],[G,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x+y-1.0,0.0),opacity);}"],[N,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(max(1.0-min((1.0-x)/(2.0*y),1.0),0.0),min(x/(2.0*(1.0-y)),1.0),step(0.5,y));return mix(x,z,opacity);}"]]),de=class extends i.pBf{constructor(e,t=1){super(),this._blendFunction=e,this.opacity=new i.xWb(t)}getOpacity(){return this.opacity.value}setOpacity(e){this.opacity.value=e}get blendFunction(){return this._blendFunction}set blendFunction(e){this._blendFunction=e,this.dispatchEvent({type:"change"})}getBlendFunction(){return this.blendFunction}setBlendFunction(e){this.blendFunction=e}getShaderCode(){return fe.get(this.blendFunction)}},ve=class extends i.pBf{constructor(e,t,{attributes:n=V,blendFunction:r=_,defines:s=new Map,uniforms:a=new Map,extensions:o=null,vertexShader:c=null}={}){super(),this.name=e,this.renderer=null,this.attributes=n,this.fragmentShader=t,this.vertexShader=c,this.defines=s,this.uniforms=a,this.extensions=o,this.blendMode=new de(r),this.blendMode.addEventListener("change",(e=>this.setChanged())),this._inputColorSpace=i.rnI,this._outputColorSpace=null}get inputColorSpace(){return this._inputColorSpace}set inputColorSpace(e){this._inputColorSpace=e,this.setChanged()}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e,this.setChanged()}set mainScene(e){}set mainCamera(e){}getName(){return this.name}setRenderer(e){this.renderer=e}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(e){this.attributes=e,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(e){this.fragmentShader=e,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(e){this.vertexShader=e,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(e,t=i.z81){}update(e,t,n){}setSize(e,t){}initialize(e,t,n){}dispose(){for(const e of Object.keys(this)){const t=this[e];(t instanceof i.dd2||t instanceof i.F5T||t instanceof i.xEZ||t instanceof te)&&this[e].dispose()}}};new i.Pa4,new i.yGw;new i.Ilk,new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,0,1]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([1,0,1]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([0,1,1]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([0,1,1]),new Float32Array([1,1,1]);new Float32Array(2),new Float32Array(2),new Float32Array([0,-.25,.25,-.125,.125,-.375,.375]),new Float32Array([0,0]),new Float32Array([.25,-.25]),new Float32Array([-.25,.25]),new Float32Array([.125,-.125]),new Float32Array([-.125,.125]),new Uint8Array([0,0]),new Uint8Array([3,0]),new Uint8Array([0,3]),new Uint8Array([3,3]),new Uint8Array([1,0]),new Uint8Array([4,0]),new Uint8Array([1,3]),new Uint8Array([4,3]),new Uint8Array([0,1]),new Uint8Array([3,1]),new Uint8Array([0,4]),new Uint8Array([3,4]),new Uint8Array([1,1]),new Uint8Array([4,1]),new Uint8Array([1,4]),new Uint8Array([4,4]),new Uint8Array([0,0]),new Uint8Array([1,0]),new Uint8Array([0,2]),new Uint8Array([1,2]),new Uint8Array([2,0]),new Uint8Array([3,0]),new Uint8Array([2,2]),new Uint8Array([3,2]),new Uint8Array([0,1]),new Uint8Array([1,1]),new Uint8Array([0,3]),new Uint8Array([1,3]),new Uint8Array([2,1]),new Uint8Array([3,1]),new Uint8Array([2,3]),new Uint8Array([3,3]);me(0,0,0,0),new Float32Array([0,0,0,0]),me(0,0,0,1),new Float32Array([0,0,0,1]),me(0,0,1,0),new Float32Array([0,0,1,0]),me(0,0,1,1),new Float32Array([0,0,1,1]),me(0,1,0,0),new Float32Array([0,1,0,0]),me(0,1,0,1),new Float32Array([0,1,0,1]),me(0,1,1,0),new Float32Array([0,1,1,0]),me(0,1,1,1),new Float32Array([0,1,1,1]),me(1,0,0,0),new Float32Array([1,0,0,0]),me(1,0,0,1),new Float32Array([1,0,0,1]),me(1,0,1,0),new Float32Array([1,0,1,0]),me(1,0,1,1),new Float32Array([1,0,1,1]),me(1,1,0,0),new Float32Array([1,1,0,0]),me(1,1,0,1),new Float32Array([1,1,0,1]),me(1,1,1,0),new Float32Array([1,1,1,0]),me(1,1,1,1),new Float32Array([1,1,1,1]);function pe(e,t,n){return e+(t-e)*n}function me(e,t,n,i){const r=pe(e,t,.75),s=pe(n,i,.75);return pe(r,s,.875)}Math.PI,new i.Pa4,new i.Pa4;var xe=class extends ve{constructor({blendFunction:e,texture:t=null,aspectCorrection:n=!1}={}){super("TextureEffect","#ifdef TEXTURE_PRECISION_HIGH\nuniform mediump sampler2D map;\n#else\nuniform lowp sampler2D map;\n#endif\nvarying vec2 vUv2;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){\n#ifdef UV_TRANSFORM\nvec4 texel=texelToLinear(texture2D(map,vUv2));\n#else\nvec4 texel=texelToLinear(texture2D(map,uv));\n#endif\noutputColor=TEXEL;}",{blendFunction:e,defines:new Map([["TEXEL","texel"]]),uniforms:new Map([["map",new i.xWb(null)],["scale",new i.xWb(1)],["uvTransform",new i.xWb(null)]])}),this.texture=t,this.aspectCorrection=n}get texture(){return this.uniforms.get("map").value}set texture(e){const t=this.texture,n=this.uniforms,r=this.defines;if(t!==e){if(n.get("map").value=e,n.get("uvTransform").value=e.matrix,r.delete("TEXTURE_PRECISION_HIGH"),null!==this.renderer){const t=s(e,this.renderer.capabilities.isWebGL2);r.set("texelToLinear(texel)",t)}null!==e&&(e.matrixAutoUpdate?(r.set("UV_TRANSFORM","1"),this.setVertexShader("#ifdef ASPECT_CORRECTION\nuniform float scale;\n#else\nuniform mat3 uvTransform;\n#endif\nvarying vec2 vUv2;void mainSupport(const in vec2 uv){\n#ifdef ASPECT_CORRECTION\nvUv2=uv*vec2(aspect,1.0)*scale;\n#else\nvUv2=(uvTransform*vec3(uv,1.0)).xy;\n#endif\n}")):(r.delete("UV_TRANSFORM"),this.setVertexShader(null)),e.type!==i.ywz&&r.set("TEXTURE_PRECISION_HIGH","1"),null!==t&&t.type===e.type&&t.encoding===e.encoding||this.setChanged())}}getTexture(){return this.texture}setTexture(e){this.texture=e}get aspectCorrection(){return this.defines.has("ASPECT_CORRECTION")}set aspectCorrection(e){this.aspectCorrection!==e&&(e?this.defines.set("ASPECT_CORRECTION","1"):this.defines.delete("ASPECT_CORRECTION"),this.setChanged())}get uvTransform(){const e=this.texture;return null!==e&&e.matrixAutoUpdate}set uvTransform(e){const t=this.texture;null!==t&&(t.matrixAutoUpdate=e)}setTextureSwizzleRGBA(e,t=e,n=e,i=e){const r="rgba";let s="";e===D&&t===k&&n===O&&i===L||(s=[".",r[e],r[t],r[n],r[i]].join("")),this.defines.set("TEXEL","texel"+s),this.setChanged()}update(e,t,n){this.texture.matrixAutoUpdate&&this.texture.updateMatrix()}initialize(e,t,n){const i=s(this.texture,e.capabilities.isWebGL2);this.defines.set("texelToLinear(texel)",i),this.renderer=e}},ye=class extends ve{constructor({blendFunction:e,offset:t=0,rotation:n=0,focusArea:r=.4,feather:s=.3,bias:a=.06,kernelSize:o=$.MEDIUM,resolutionScale:c=.5,resolutionX:u=re.AUTO_SIZE,resolutionY:l=re.AUTO_SIZE}={}){super("TiltShiftEffect","#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D map;\n#else\nuniform lowp sampler2D map;\n#endif\nuniform vec4 maskParams;varying vec2 vUv2;float linearGradientMask(const in float x){return smoothstep(maskParams.x,maskParams.y,x)-smoothstep(maskParams.w,maskParams.z,x);}void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){float mask=linearGradientMask(vUv2.y);vec4 texel=texture2D(map,uv);outputColor=mix(texel,inputColor,mask);}",{vertexShader:"uniform vec2 rotation;varying vec2 vUv2;void mainSupport(const in vec2 uv){vUv2=(uv-0.5)*2.0*vec2(aspect,1.0);vUv2=vec2(dot(rotation,vUv2),dot(rotation,vec2(vUv2.y,-vUv2.x)));}",blendFunction:e,uniforms:new Map([["rotation",new i.xWb(new i.FM8)],["maskParams",new i.xWb(new i.Ltg)],["map",new i.xWb(null)]])}),this._offset=t,this._focusArea=r,this._feather=s,this._bias=a,this.renderTarget=new i.dd2(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="TiltShift.Target",this.uniforms.get("map").value=this.renderTarget.texture,this.blurPass=new le({kernelSize:o,resolutionScale:c,resolutionX:u,resolutionY:l,offset:t,rotation:n,focusArea:r,feather:s});const h=this.resolution=new re(this,u,l,c);h.addEventListener("change",(e=>this.setSize(h.baseWidth,h.baseHeight))),this.rotation=n,this.updateParams()}updateParams(){const e=this.uniforms.get("maskParams").value,t=Math.max(this.focusArea-this.bias,0),n=Math.max(t-Math.max(this.feather-this.bias,0),0);e.set(this.offset-t,this.offset-n,this.offset+t,this.offset+n)}get rotation(){return Math.acos(this.uniforms.get("rotation").value.x)}set rotation(e){this.uniforms.get("rotation").value.set(Math.cos(e),Math.sin(e)),this.blurPass.blurMaterial.rotation=e}get offset(){return this._offset}set offset(e){this._offset=e,this.blurPass.blurMaterial.offset=e,this.updateParams()}get focusArea(){return this._focusArea}set focusArea(e){this._focusArea=e,this.blurPass.blurMaterial.focusArea=e,this.updateParams()}get feather(){return this._feather}set feather(e){this._feather=e,this.blurPass.blurMaterial.feather=e,this.updateParams()}get bias(){return this._bias}set bias(e){this._bias=e,this.updateParams()}update(e,t,n){this.blurPass.render(e,t,this.renderTarget)}setSize(e,t){const n=this.resolution;n.setBaseSize(e,t),this.renderTarget.setSize(n.width,n.height),this.blurPass.resolution.copy(n)}initialize(e,t,n){this.blurPass.initialize(e,t,n),void 0!==n&&(this.renderTarget.texture.type=n,e.outputEncoding===i.knz&&(this.renderTarget.texture.encoding=i.knz))}}}}]);